xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=11000, y=3500, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=10000, y=4000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 10000),
bins = 2000,
title = NULL,
xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=5000, y=1800, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=4500, y=2000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 50000),
bins = 500,
title = NULL,
xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=11000, y=3500, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=10000, y=4000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# save plots
ggsave(file.path(outfolder,str_c(date,"_comp-wide_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
# save plots
ggsave(file.path(outfolder,str_c(date,"_comp-wide_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_comp-wide_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 10000),
bins = 2000,
title = NULL,
xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=5000, y=1800, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=4500, y=2000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# save plots
ggsave(file.path(outfolder,str_c(date,"_comp-narrow_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_comp-narrow_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
gghistogram(gene_distance.cre, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
bins = 100,
title = NULL,
xlab = "Distance between 5' and 3' UTR of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=50000, y=4000, label=str_c("Median: ",round(median(gene_distance.cre$distance))," bp"), color="#E7B800")#+
# save plots
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
gghistogram(gff.size.cre, x = "Size",
add = "median", rug = TRUE,
fill = "Type", palette = c("#E7B800","#bdbdbd","#00AFBB"), #FC4E07
add_density = FALSE,
xlim = c(0, 10000),
bins = 1000,
title = NULL,
xlab = "Size (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=6000, y=4000, label=str_c("Median: ",round( median(filter(gff.size.cre, Type == "gene")$Size))," bp"), color="#bdbdbd")+
annotate(geom="text", x=2000, y=8000, label=str_c("Median: ",round( median(filter(gff.size.cre, Type == "five_prime_UTR")$Size))," bp"), color="#E7B800")+
annotate(geom="text", x=2000, y=6000, label=str_c("Median: ",round( median(filter(gff.size.cre, Type == "three_prime_UTR")$Size))," bp"), color="#00AFBB")
# save plots
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Genetic-elements_histogram.pdf")), width = 15, height = 10, units = "cm")
# save plots
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Genetic-elements_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Genetic-elements_histogram.png")), width = 15, height = 10, units = "cm")
gghistogram(gene_distance.cre, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
bins = 100,
title = NULL,
xlab = "Distance between 5' and 3' UTR of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=50000, y=4000, label=str_c("Median: ",round(median(gene_distance.cre$distance))," bp"), color="#E7B800")#+
# save plots
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
gghistogram(gene_distance.cre, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
bins = 100,
title = NULL,
xlab = "Distance between 5' and 3' UTR of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=50000, y=4000, label=str_c("Median: ",round(median(gene_distance.cre$distance))," bp"), color="#E7B800")#+
# save plots
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
gghistogram(gene_distance.ptr, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#00AFBB", "#E7B800"),
add_density = TRUE,
bins = 100,
title = NULL,
xlab = "Distance between start and stop codon of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=10000, y=900, label=str_c("Median: ",round(median(gene_distance.ptr$distance))," bp"), color="#00AFBB")#+
# save plots
ggsave(file.path(outfolder,str_c(date,"_Pheo_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
# save plots
ggsave(file.path(outfolder,str_c(date,"_Pheo_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_Pheo_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
# subset to gene regions on chromosomes
gff.select <- filter(gff, Type == "five_prime_UTR" | Type == "three_prime_UTR" & grepl("chromosome",Chr))
# subset to gene regions on chromosomes
gff.select <- filter(gff, Type == "five_prime_UTR" | Type == "three_prime_UTR") %>%
filter(grepl("chromosome",Chr))
# subset to gene regions on chromosomes
gff.select <- filter(gff, Type == "five_prime_UTR" | Type == "three_prime_UTR") %>%
filter(grepl("chromosome",Chr))
# initialise new dataframe
gene_distance.cre <- tibble()
# loop over all chromosomes
for (c in 1:length(table(gff.select$Chr))){
# select entries for chromosome and plus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chromosome_",c) & Strand == "+") %>%
arrange(Start)
# loop over all rows
for (i in 2:nrow(gff.select.chr)){
if (gff.select.chr$Type[i]=="five_prime_UTR" & gff.select.chr$Type[i-1]=="three_prime_UTR"){
gene_names <- str_c(gff.select.chr$Info[i-1]," - ", gff.select.chr$Info[i])
distance <- (gff.select.chr$Stop[i]+1) - (gff.select.chr$Start[i-1]-1)
strand <- "+"
species <- "C. reinhardtii"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance.cre <- rbind(gene_distance.cre, temp)
}
}
# select entries for chromosome and minus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chromosome_",c) & Strand == "-") %>%
arrange(Start)
# loop over all rows
for (j in nrow(gff.select.chr):2){
if (gff.select.chr$Type[j]=="three_prime_UTR" & gff.select.chr$Type[j-1]=="five_prime_UTR"){
gene_names <- str_c(gff.select.chr$Info[j]," - ", gff.select.chr$Info[j-1])
distance <- (gff.select.chr$Stop[j]+1) - (gff.select.chr$Start[j-1]-1)
strand <- "-"
species <- "C. reinhardtii"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance.cre <- rbind(gene_distance.cre, temp)
}
}
}
gghistogram(gene_distance.cre, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
bins = 100,
title = NULL,
xlab = "Distance between 5' and 3' UTR of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=50000, y=4000, label=str_c("Median: ",round(median(gene_distance.cre$distance))," bp"), color="#E7B800")#+
# subset to gene regions on chromosomes
gff.select <- filter(gff, Type == "gene" & grepl("chromosome",Chr))
# initialise new dataframe
gene_distance_1.cre <- tibble()
# loop over all chromosomes
for (c in 1:length(table(gff.select$Chr))){
# select entries for chromosome and plus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chromosome_",c) & Strand == "+") %>%
arrange(Start)
# loop over all rows
for (i in 2:nrow(gff.select.chr)){
gene_names <- str_c(gff.select.chr$Info[i-1]," - ", gff.select.chr$Info[i])
distance <- gff.select.chr$Start[i] - gff.select.chr$Stop[i-1]
strand <- "+"
species <- "C. reinhardtii"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance_1.cre <- rbind(gene_distance_1.cre, temp)
}
# select entries for chromosome and minus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chromosome_",c) & Strand == "-") %>%
arrange(Start)
# loop over all rows
for (j in nrow(gff.select.chr):2){
gene_names <- str_c(gff.select.chr$Info[j]," - ", gff.select.chr$Info[j-1])
distance <- gff.select.chr$Start[j] - gff.select.chr$Stop[j-1]
strand <- "-"
species <- "C. reinhardtii"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance_1.cre <- rbind(gene_distance_1.cre, temp)
}
}
list.of.packages = c("here","tidyverse","knitr","tcltk","readxl","matrixStats","openxlsx","tools","stringr","utils","pdftools","ggplot2","ggpubr","BBmisc","ggsci","scales","RColorBrewer")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages) > 0) {install.packages(new.packages)}
lapply(list.of.packages, require, character.only=T)
# Date
date <- format(Sys.Date(), format="%Y-%m-%d")
# set working directory
setwd("/Users/aholzer/ownCloud/PhD/Experiments+Data/B12_motif_search_Marcel")
# Name of the output directory (will be created in your current working directory)
outfolder <- file.path(str_c(date,"_Gene-distance-analysis"))
# create output dir
dir.create(outfolder, showWarnings = TRUE)
# load raw gff file
gff.file <-read_tsv("Genomes/Phatr2/Phatr2_chromosomes_geneModels_FilteredModels2.gff" , na = c("", "NA"), col_names = FALSE)
# annotate column names
colnames(gff.file) <- c("Chr","Source","Type","Start","Stop","Blank","Strand","Nr","Info")
# select important columns
gff <- select(gff.file, Chr, Type, Start, Stop, Strand, Info)
# subset to start - stop regions
gff.select <- filter(gff, Type == "stop_codon" | Type == "start_codon")
# initialise new dataframe
gene_distance.ptr <- tibble()
# loop over all chromosomes
for (c in 1:length(table(gff$Chr))){
# select entries for chromosome and plus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chr_",c) & Strand == "+") %>%
arrange(Start)
# loop over all rows
for (i in 2:nrow(gff.select.chr)){
if (gff.select.chr$Type[i]=="start_codon" & gff.select.chr$Type[i-1]=="stop_codon"){
gene_names <- str_c(gff.select.chr$Info[i-1]," - ", gff.select.chr$Info[i])
distance <- gff.select.chr$Start[i] - gff.select.chr$Stop[i-1]
strand <- "+"
species <- "P. tricornutum"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance.ptr <- rbind(gene_distance.ptr, temp)
}
}
# select entries for chromosome and minus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chr_",c) & Strand == "-") %>%
arrange(Start)
# loop over all rows
for (j in nrow(gff.select.chr):2){
if (gff.select.chr$Type[j]=="stop_codon" & gff.select.chr$Type[j-1]=="start_codon"){
gene_names <- str_c(gff.select.chr$Info[j]," - ", gff.select.chr$Info[j-1])
distance <- gff.select.chr$Start[j] - gff.select.chr$Stop[j-1]
strand <- "-"
species <- "P. tricornutum"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance.ptr <- rbind(gene_distance.ptr, temp)
}
}
}
gghistogram(gene_distance.ptr, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#00AFBB", "#E7B800"),
add_density = TRUE,
bins = 100,
title = NULL,
xlab = "Distance between start and stop codon of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=10000, y=900, label=str_c("Median: ",round(median(gene_distance.ptr$distance))," bp"), color="#00AFBB")#+
#annotate(geom="text", x=10000, y=800, label=str_c("Mean: ",round(mean(gene_distance.ptr$distance))," bp"), color="black")
# save plots
ggsave(file.path(outfolder,str_c(date,"_Pheo_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_Pheo_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
# load raw gff file
gff.file <-read_tsv("/Users/aholzer/ownCloud/PhD/Creinhardtii/Reference_genome/v5.6/annotation/2019-03-07_Creinhardtii_281_v5.6.gene.tsv" , na = c("", "NA"), col_names = TRUE)
# annotate column names
colnames(gff.file) <- c("Chr","Source","Type","Start","Stop","Blank","Strand","Nr","Info")
# select important columns
gff <- select(gff.file, Chr, Type, Start, Stop, Strand, Info)
# subset to gene regions on chromosomes
gff.select <- filter(gff, Type == "gene" & grepl("chromosome",Chr))
# initialise new dataframe
gene_distance_1.cre <- tibble()
# loop over all chromosomes
for (c in 1:length(table(gff.select$Chr))){
# select entries for chromosome and plus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chromosome_",c) & Strand == "+") %>%
arrange(Start)
# loop over all rows
for (i in 2:nrow(gff.select.chr)){
gene_names <- str_c(gff.select.chr$Info[i-1]," - ", gff.select.chr$Info[i])
distance <- gff.select.chr$Start[i] - gff.select.chr$Stop[i-1]
strand <- "+"
species <- "C. reinhardtii"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance_1.cre <- rbind(gene_distance_1.cre, temp)
}
# select entries for chromosome and minus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chromosome_",c) & Strand == "-") %>%
arrange(Start)
# loop over all rows
for (j in nrow(gff.select.chr):2){
gene_names <- str_c(gff.select.chr$Info[j]," - ", gff.select.chr$Info[j-1])
distance <- gff.select.chr$Start[j] - gff.select.chr$Stop[j-1]
strand <- "-"
species <- "C. reinhardtii"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance_1.cre <- rbind(gene_distance_1.cre, temp)
}
}
gghistogram(gene_distance_1.cre, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
bins = 100,
title = NULL,
xlab = "Distance between 5' and 3' UTR of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=50000, y=4000, label=str_c("Median: ",round(median(gene_distance_1.cre$distance))," bp"), color="#E7B800")#+
#annotate(geom="text", x=10000, y=800, label=str_c("Mean: ",round(mean(gene_distance_1.cre$distance))," bp"), color="black")
# save plots
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Gene-distance-1_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Gene-distance-1_histogram.png")), width = 15, height = 10, units = "cm")
# subset to gene regions on chromosomes
gff.select <- filter(gff, Type == "five_prime_UTR" | Type == "three_prime_UTR") %>%
filter(grepl("chromosome",Chr))
# initialise new dataframe
gene_distance.cre <- tibble()
# loop over all chromosomes
for (c in 1:length(table(gff.select$Chr))){
# select entries for chromosome and plus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chromosome_",c) & Strand == "+") %>%
arrange(Start)
# loop over all rows
for (i in 2:nrow(gff.select.chr)){
if (gff.select.chr$Type[i]=="five_prime_UTR" & gff.select.chr$Type[i-1]=="three_prime_UTR"){
gene_names <- str_c(gff.select.chr$Info[i-1]," - ", gff.select.chr$Info[i])
distance <- (gff.select.chr$Stop[i]+1) - (gff.select.chr$Start[i-1]-1)
strand <- "+"
species <- "C. reinhardtii"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance.cre <- rbind(gene_distance.cre, temp)
}
}
# select entries for chromosome and minus strand and sort by start location
gff.select.chr <- filter(gff.select, Chr == str_c("chromosome_",c) & Strand == "-") %>%
arrange(Start)
# loop over all rows
for (j in nrow(gff.select.chr):2){
if (gff.select.chr$Type[j]=="three_prime_UTR" & gff.select.chr$Type[j-1]=="five_prime_UTR"){
gene_names <- str_c(gff.select.chr$Info[j]," - ", gff.select.chr$Info[j-1])
distance <- (gff.select.chr$Stop[j]+1) - (gff.select.chr$Start[j-1]-1)
strand <- "-"
species <- "C. reinhardtii"
temp <- data.frame(gene_names, distance, strand, species)
gene_distance.cre <- rbind(gene_distance.cre, temp)
}
}
}
gghistogram(gene_distance.cre, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
bins = 100,
title = NULL,
xlab = "Distance between start and stop codon of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=50000, y=4000, label=str_c("Median: ",round(median(gene_distance.cre$distance))," bp"), color="#E7B800")#+
#annotate(geom="text", x=10000, y=800, label=str_c("Mean: ",round(mean(gene_distance.cre$distance))," bp"), color="black")
# save plots
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
# subset to gene regions on chromosomes
gff.size.cre <- filter(gff, Type == "gene" | Type == "five_prime_UTR" | Type == "three_prime_UTR", grepl("chromosome",Chr))
gff.size.cre$Size <- abs(gff.size.cre$Start-gff.size.cre$Stop)
gghistogram(gff.size.cre, x = "Size",
add = "median", rug = TRUE,
fill = "Type", palette = c("#E7B800","#bdbdbd","#00AFBB"), #FC4E07
add_density = FALSE,
xlim = c(0, 10000),
bins = 1000,
title = NULL,
xlab = "Size (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=6000, y=4000, label=str_c("Median: ",round( median(filter(gff.size.cre, Type == "gene")$Size))," bp"), color="#bdbdbd")+
annotate(geom="text", x=2000, y=8000, label=str_c("Median: ",round( median(filter(gff.size.cre, Type == "five_prime_UTR")$Size))," bp"), color="#E7B800")+
annotate(geom="text", x=2000, y=6000, label=str_c("Median: ",round( median(filter(gff.size.cre, Type == "three_prime_UTR")$Size))," bp"), color="#00AFBB")
# save plots
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Genetic-elements_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_Chlamy_Genetic-elements_histogram.png")), width = 15, height = 10, units = "cm")
# combine dataframes
gene_distance <- rbind(gene_distance.cre, gene_distance.ptr)
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 50000),
bins = 500,
title = NULL,
xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=11000, y=3500, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=10000, y=4000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# save plots
ggsave(file.path(outfolder,str_c(date,"_comp-wide_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_comp-wide_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 10000),
bins = 2000,
title = NULL,
xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=5000, y=1800, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=4500, y=2000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# save plots
ggsave(file.path(outfolder,str_c(date,"_comp-narrow_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_comp-narrow_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 10000),
bins = 2000,
title = NULL,
xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=5000, y=1800, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=3000, y=2000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 10000),
bins = 2000,
title = NULL,
xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=5000, y=1800, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=3500, y=2000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 10000),
bins = 2000,
title = NULL,
xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=5000, y=1800, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=4000, y=2000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 10000),
bins = 2000,
title = NULL,
xlab = "Distance between subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=5500, y=1800, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=4000, y=2000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# save plots
ggsave(file.path(outfolder,str_c(date,"_comp-narrow_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_comp-narrow_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 50000),
bins = 500,
title = NULL,
lab = "Distance between start and stop codon of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=11000, y=3500, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=10000, y=4000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 50000),
bins = 500,
title = NULL,
xlab = "Distance between start and stop codon of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=11000, y=3500, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=10000, y=4000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# save plots
ggsave(file.path(outfolder,str_c(date,"_comp-wide_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_comp-wide_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
# plot histogram
gghistogram(gene_distance, x = "distance",
add = "median", rug = TRUE,
fill = "species", palette = c("#E7B800","#00AFBB"),
add_density = TRUE,
xlim = c(0, 10000),
bins = 2000,
title = NULL,
xlab = "Distance between start and stop codon of subsequent genes (bp)",
ylab = "Abundance (1)",)+
annotate(geom="text", x=5500, y=1800, label=str_c("Median: ",round( median(filter(gene_distance, species == "C. reinhardtii")$distance))," bp"), color="#E7B800")+
annotate(geom="text", x=4000, y=2000, label=str_c("Median: ",round( median(filter(gene_distance, species == "P. tricornutum")$distance))," bp"), color="#00AFBB")
# save plots
ggsave(file.path(outfolder,str_c(date,"_comp-narrow_Gene-distance_histogram.pdf")), width = 15, height = 10, units = "cm")
ggsave(file.path(outfolder,str_c(date,"_comp-narrow_Gene-distance_histogram.png")), width = 15, height = 10, units = "cm")
source('~/Documents/GitHub/GCMS-data-extraction-tool/scripts/MetaPLMA_main-anaylsis-script.R')
files
# report step
message(str_c("\nINFO: Loading the following sample files: ", files))
# Section 3.1 outputs:
# report step
message(str_c("\nINFO: Merging sample peak data into a matrix completed successfully"))
cat(matrix.RT.ordered)
matrix.RT.ordered
source('~/Documents/GitHub/GCMS-data-extraction-tool/scripts/MetaPLMA_main-anaylsis-script.R')
